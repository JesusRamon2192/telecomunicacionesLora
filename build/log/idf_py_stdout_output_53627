[1/11] Performing build step for 'bootloader'
[1/1] cd /home/jesus/Documentos/personalProjects/microcontroladores/esp32/lora/esp32lora/build/bootloader/esp-idf/esptool_py && /home/jesus/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/jesus/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/jesus/Documentos/personalProjects/microcontroladores/esp32/lora/esp32lora/build/bootloader/bootloader.bin
Bootloader binary size 0x67e0 bytes. 0x820 bytes (7%) free.
[2/9] Building C object esp-idf/lora/CMakeFiles/__idf_lora.dir/lora.c.obj
[3/9] Linking C static library esp-idf/lora/liblora.a
[4/9] Linking C static library esp-idf/main/libmain.a
[5/9] Generating ld/sections.ld
[6/9] Building C object CMakeFiles/esp32lora.elf.dir/project_elf_src_esp32.c.obj
[7/9] Linking CXX executable esp32lora.elf
[8/9] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/jesus/Documentos/personalProjects/microcontroladores/esp32/lora/esp32lora/build/esp32lora.bin
[9/9] cd /home/jesus/Documentos/personalProjects/microcontroladores/esp32/lora/esp32lora/build/esp-idf/esptool_py && /home/jesus/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/jesus/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/jesus/Documentos/personalProjects/microcontroladores/esp32/lora/esp32lora/build/partition_table/partition-table.bin /home/jesus/Documentos/personalProjects/microcontroladores/esp32/lora/esp32lora/build/esp32lora.bin
esp32lora.bin binary size 0x31ae0 bytes. Smallest app partition is 0x100000 bytes. 0xce520 bytes (81%) free.
